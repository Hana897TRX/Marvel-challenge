plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'dagger.hilt.android.plugin'
  id 'kotlin-parcelize'
  id 'androidx.navigation.safeargs.kotlin'
  id 'com.google.gms.google-services'
}

android {
  compileSdkVersion AppConfig.COMPILED_SDK
  buildToolsVersion "30.0.3"

  defaultConfig {
    applicationId AppConfig.APPLICATION_ID
    minSdkVersion AppConfig.MIN_SDK_VER
    targetSdkVersion AppConfig.TARGET_SDK_VER
    versionCode AppConfig.VERSION_CODE
    versionName AppConfig.VERSION_NAME

    testInstrumentationRunner AppConfig.TEST_INSTRUMENT_RUNNER
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      buildConfigField 'String', 'BASE_URL', '"https://gateway.marvel.com/v1/public/"'
    }

    debug {
      applicationIdSuffix ".debug"
      debuggable true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      buildConfigField 'String', 'BASE_URL', '"https://gateway.marvel.com/v1/public/"'
    }

    qa {
      applicationIdSuffix ".qa"
      debuggable true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      buildConfigField 'String', 'BASE_URL', '"https://gateway.marvel.com/v1/public/"'
    }

    staging {
      initWith debug
      manifestPlaceholders = [hostName:"com-wizeline.heroes"]
      applicationIdSuffix ".debugStaging"
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }

  viewBinding {
    enabled = true
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'androidx.core:core-ktx:1.7.0'
  implementation 'androidx.appcompat:appcompat:1.4.1'
  implementation 'com.google.android.material:material:1.5.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
  implementation 'androidx.navigation:navigation-fragment-ktx:2.4.0'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'

  // Retrofit
  implementation Retrofit.RETROFIT_DEP
  implementation Retrofit.RETROFIT_GSON


  testImplementation TestDep.JUNIT_DEP
  androidTestImplementation TestDep.JUNIT_EXT_DEP
  androidTestImplementation TestDep.ESPRESSO_DEP

  // Dagger hilt
  implementation CommonDependency.DAGGER_HILT_DEP
  kapt CommonDependency.DAGGER_COMPILER

  // Flow
  implementation CommonDependency.FLOW_DEP

  // Lifecycle
  implementation CommonDependency.LIFECYCLE_DEP

  // Glide
  implementation CommonDependency.GLIDE_DEP
  annotationProcessor CommonDependency.GLIDE_PRO

  // Safe Args
  implementation CommonDependency.SAFE_ARGS_FRAGMENT_DEP
  implementation CommonDependency.SAFE_ARGS_UI_DEP

  // Firebase
  implementation platform(CommonDependency.FIREBASE_BOM_DEP)
  implementation CommonDependency.FIREBASE_ANALYTICS_DEP
  implementation CommonDependency.FIREBASE_CONFIG

  // RXJava
  implementation CommonDependency.RX_JAVA2_DEP
  implementation CommonDependency.RX_JAVA2_ANDROID_DEP
  implementation CommonDependency.RX_JAVA2_ADAPTER_DEP
  testImplementation CommonDependency.RX_JAVA2_TESTING_DEP

  // Coroutines
  implementation CommonDependency.COROUTINES_ANDROID_DEP
  implementation CommonDependency.COROUTINES_CORE_DEP

  // MockWebServer
  implementation CommonDependency.MOCK_WEB_SERVER_DEP
  implementation CommonDependency.MOCK_WEB_SERVER_KOTLIN_DEP

  // Test
  androidTestImplementation CommonDependency.COROUTINES_TEST
  testImplementation CommonDependency.COROUTINES_TEST_IMP
}
